/*
 * ap_main.c
 *
 *  Created on: Jun 19, 2025
 *      Author: kccistc
 */

#include "ap_main.h"

enum { START,
	WATCH,
	STOPWATCH,
	STOP,
	CLEAR
};

typedef struct {
	uint16_t msec;
	uint16_t sec;
	uint16_t min;
}clock_type;

button_handler_t hBtnA;
button_handler_t hBtnB;
button_handler_t hBtnC;

void TIM2_IRQHandler(void) // 인터럽트 함수 Startup가보면 인터럽트벡터등 이름이 명시되어 있음
{
	incTick();
	FND_DisplayData();
	TIM_ClearUIF(TIM2);
}

int ap_main()
{
	clock_type clock[2];
	uint32_t ap_state = START;
	uint32_t dp = 0;
	uint32_t mode = 0;
	clock[WATCH].msec = 0;
	clock[WATCH].sec = 0;
	clock[WATCH].min = 0;
	clock[STOPWATCH].msec = 0;
	clock[STOPWATCH].sec = 0;
	clock[STOPWATCH].min = 0;
	uint32_t prevCounterTime = 0;

	while (1) {
		if(getTick() - prevCounterTime >= 100) {
			prevCounterTime = getTick();
			msec ++;

			if(msec == 10){
				msec = 0;
				sec++;
			}
			if(sec == 60){
				sec = 0;
				min++;
			}
			if(min == 10){
				min = 0;
			}
		}
		dp = 0;

		switch (ap_state) {
		case START:
			ap_state = WATCH;
			break;
		case WATCH:
			if(msec > 5) dp ^= (1U<<1);
			if(sec > 5) dp ^= (1U<<3);
			FND_WtireData(msec+sec*10+min*1000, dp);
			if (Button_GetState(&hBtnA) == ACT_PUSHED) {
				ap_state = STOPWATCH;
			}
			break;
		case STOPWATCH:
			if(msec > 5) dp ^= (1U<<1);
			if(sec > 5) dp ^= (1U<<3);
			FND_WtireData(msec+sec*10+min*1000, dp);
			if (Button_GetState(&hBtnA) == ACT_PUSHED) {
				ap_state = WATCH;
			} else if (Button_GetState(&hBtnB) == ACT_PUSHED) {
				ap_state = STOP;
			}
			break;
		case STOP:
			if (Button_GetState(&hBtnA) == ACT_PUSHED) {
				ap_state = WATCH;
			} else if (Button_GetState(&hBtnB) == ACT_PUSHED) {
				ap_state = STOPWATCH;
			} else if (Button_GetState(&hBtnC) == ACT_PUSHED) {
				ap_state = CLEAR;
			}
			break;
		case CLEAR:
			ap_state = STOP;
			break;
		}

	}
	return 0;
}

void ap_init()
{
	SystemClock_init();
	LedBar_Init();
	Button_Init(&hBtnA, GPIOB, 5);
	Button_Init(&hBtnB, GPIOB, 3);
	Button_Init(&hBtnC, GPIOA, 10);
	FND_Init();

	//TIM2 EN, TIM2INTRF
	TIM_Init(TIM2, 16 - 1, 1000 - 1);
	TIM_CntStart(TIM2);
	TIM_UIEnable(TIM2);
	NVIC_EnableIRQ(TIM2_IRQn); // TIM2 interruft EN
}
