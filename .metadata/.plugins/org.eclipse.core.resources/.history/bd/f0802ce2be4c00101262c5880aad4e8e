/*
 * button.c
 *
 *  Created on: Jun 19, 2025
 *      Author: kccistc
 */
#include "Button.h"

enum {
    PUSHED = 0,
    RELEASED = 1,
};

typedef enum {
    NO_ACT = 0,
    ACT_PUSHED = 1,
    ACT_RELEASED = 2,
} button_state_t;

void Button_Init(GPIO_TypeDef* GPIOx, uint32_t PinNum)
{
    GPIO_Init(GPIOx, PinNum, INPUT);
}

int Button_GetState(GPIO_TypeDef* GPIOx, uint32_t PinNum)
{
    static uint32_t preState = RELEASED;
    uint32_t curState;
    curState = GPIO_ReadPin(GPIOC, 13);

    if (preState == RELEASED && curState == PUSHED) {
        delay(2);
        preState = curState;
        return ACT_PUSHED;
    } else if (preState == PUSHED && curState == RELEASED) {
        delay(2);
        preState = curState;
        return ACT_RELEASED;
    }
    return NO_ACT;
}
