/*
 * LCD.c
 *
 *  Created on: Jun 25, 2025
 *      Author: kccistc
 */

#include "LCD.h"

#define LCD_4BIT_FUNC_SET 	0x28
#define LCD_DISP_ON 		0x0C
#define LCD_DISP_OFF 		0x08
#define LCD_DISP_CLEAR 		0x01
#define LCD_ENTRY_MODE_SET 	0x06

#define LCD_DEV_ADDR		0x27

enum {
	LCD_RS = 0,
	LCD_RW = 1,
	LCD_E  = 2,
	LCD_BL = 3 // not used
};

static uint8_t lcdData = 0;
static I2C_HandleTypeDef* hLcdI2C;

static void LCD_cmdMode();
static void LCD_charMode();
static void LCD_E_High();
static void LCD_E_Low();
static void LCD_writeMode();
static void LCD_readMode();
static void LCD_E_High();
static void LCD_E_Low();
static void LCD_sendNibbleData(uint8_t data);
static void LCD_sendI2C(uint8_t data);

void LCD_cmdMode() {
	lcdData |= (1 << LCD_RS);
	LCD_sendI2C(lcdData);
}

void LCD_charMode() {
	lcdData |= (1 << LCD_RS);
	LCD_sendI2C(lcdData);
}

void LCD_E_High() {
	lcdData |= (1 << LCD_E);
	LCD_sendI2C(lcdData);
}

void LCD_E_Low() {
	lcdData &= ~(1 << LCD_E);
	LCD_sendI2C(lcdData);
}

void LCD_writeMode() {
	lcdData &= ~(1 << LCD_RW);
	LCD_sendI2C(lcdData);
}

void LCD_readMode() {
	lcdData |= (1 << LCD_RW);
	LCD_sendI2C(lcdData);
}

void LCD_sendNibbleData(uint8_t data) {
	LCD_E_High(); // LCD_i2c enable
	lcdData = (data & 0xf0) | (lcdData & 0x0f);
	LCD_sendI2C(lcdData);
	LCD_E_Low(); // LCD_i2c disable
}

void LCD_writeCmdData(uint8_t data) {
	LCD_writeMode();
	LCD_cmdMode();
	LCD_sendData(data);
}

void LCD_writeCharData(uint8_t data) {
	LCD_writeMode();
	LCD_charMode();
	LCD_sendData(data);
}

void LCD_sendI2C(uint8_t data) {
	HAL_I2C_Master_Transmit(hLcdI2C, LCD_DEV_ADDR << 1, &data, sizeof(data), 1000);
}

///// public /////
void LCD_Init() {
	hLcdI2C = hi2c1;
	HAL_Delay(50);
	LCD_cmdMode();
	LCD_writeMode();
	LCD_sendNibbleData(0x30);
	HAL_Delay(5);
	LCD_sendNibbleData(0x30);

	HAL_Delay(1);
	LCD_sendNibbleData(0x30);
	LCD_sendNibbleData(0x20);

	LCD_sendData(LCD_4BIT_FUNC_SET);
	LCD_sendData(LCD_DISP_OFF);
	LCD_sendData(LCD_DISP_CLEAR);
	LCD_sendData(LCD_ENTRY_MODE_SET);
	LCD_sendData(LCD_DISP_ON);
	LCD_backLightOn();
}

void LCD_backLightOn() {
	lcdData |= (1<<LCD_BL);
}

void LCD_backLightOff() {
	lcdData &= ~(1<<LCD_BL);
}

void LCD_sendData(uint8_t data){
	// High 4bit
	LCD_sendNibbleData(data);


	// Low 4bit
	LCD_sendNibbleData(data << 4);
}

