/*
 * Controller.c
 *
 *  Created on: Jun 24, 2025
 *      Author: kccistc
 */

#include "Controller.h"
#include "ModeCtrlModel.h"
#include "Listener.h"

uint32_t controlE;
char inputStr[50];

typedef enum {FND_HT, FND_TIME}FND_SHOWDATA; // fnd mode enum
#define LCD_DATA_NUM 4
#define FND_MODE_NUM 2

static char LCD_DATA[4][18] = {"TEST0","TEST1","TEST2","TEST3"};
static uint32_t FND_DATA[2] = {1234, tem*100 + hue};

static uint32_t motOff_Tem = 30;
static uint32_t ledOff_Dis = 100;
uint32_t hue = 10;
uint32_t tem = 10;
uint32_t dis = 100;

static int showLcdDataIndex = 0;
static FND_SHOWDATA fnd_mode = FND_HT;

void ctrl_LCD_DataSel();
void ctrl_FND_DataMode();

void ctrl_LCD_DataSel() { // LCD show Data sel ctrl
	if (controlE == controlId_BTN0) {
		controlE = controlId_IDLE;
		showLcdDataIndex = (showLcdDataIndex + 1) % LCD_DATA_NUM;
		return;
	}
	if (controlE == controlId_BTN1) {
		controlE = controlId_IDLE;
		showLcdDataIndex = (showLcdDataIndex - 1);
		if(showLcdDataIndex < 0) showLcdDataIndex = LCD_DATA_NUM - 1;
		return;
	}
}

void ctrl_FND_DataMode() { // fnd show Data sel ctrl
	if (controlE == controlId_BTN2) {
		controlE = controlId_IDLE;
		fnd_mode = (fnd_mode + 1) % FND_MODE_NUM;
		return;
	}
	if (controlE == controlId_BTN3) {
		controlE = controlId_IDLE;
		fnd_mode = (fnd_mode - 1);
		if(fnd_mode < 0) fnd_mode = FND_MODE_NUM - 1;
		return;
	}
}

///// public /////

void Controller_setEvent(uint32_t inputData)
{
	controlE = inputData;
}

void Controller_Excute()
{
	tem = get_tem();
	hue = get_hue();
	ctrl_LCD_DataSel();
	ctrl_FND_DataMode();
}

char* get_LcdData()
{
	return LCD_DATA[showLcdDataIndex];
}

uint32_t get_FndData()
{
	return FND_DATA;
}

int get_motorState() {
	return (tem > motOff_Tem) ? 1 : 0;
}

int get_lightState() {
	return (dis < ledOff_Dis) ? 1 : 0;
}
