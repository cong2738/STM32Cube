#include <stdint.h>
#include "stm32f411xe.h"
#include "driver/GPIO/GPIO.h"
#include "LedBar/LedBar.h"

#define GPIOA_BitNum (1U<<0)
#define GPIOB_BitNum (1U<<1)
#define GPIOC_BitNum (1U<<2)
#define GPIOD_BitNum (1U<<3)

void delay_while(int);

void LedBarShift(uint32_t* count);
void ButtonPush(uint32_t btn, uint32_t* pre, uint32_t* mode);
void ButtonRelease(uint32_t btn, uint32_t* pre, uint32_t* mode);
void Event(uint32_t* mode);

int main(void)
{
	RCC->AHB1ENR |= GPIOA_BitNum + GPIOB_BitNum + GPIOC_BitNum; // RCC_AHB1ENR0 Enable
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN + RCC_AHB1ENR_GPIOBEN + RCC_AHB1ENR_GPIOCEN;
	LedBar_Init(); // ledBar set OutputMode
	GPIO_Init(GPIOC, 13, INPUT); // USER BTN(PC13) set InputMode
	GPIO_Init(GPIOA, 5, OUTPUT); // USER BTN(PC13) set InputMode

	uint32_t sys_count = 0;
	uint8_t data = 1;
	uint32_t pre = 0;
	uint32_t ShiftMode = 0;
	while(1){
		int btn = GPIO_ReadPin(GPIOC, 13);
		GPIO_WritePin(GPIOA, 5, pre);
		ButtonPush(btn, &pre, &ShiftMode);
		ButtonRelease(btn, &pre, &ShiftMode);
		LedBarShift(&count);
	}
}

void LedBarShift(uint32_t* count){
	if(count == 10000) {
		LedBar_Write(data);
		switch (ShiftMode) {
		case 0:
			data = (data<<1)|(data>>7);
			break;
		case 1:
			data = (data>>1)|(data<<7);
		}
		*count = 0;
		return;
	}
}

void ButtonPush(uint32_t btn, uint32_t* pre, uint32_t* mode){
	if(btn == 0) {
		if(*pre == 1) Event(mode);
		*pre = btn;
	}
}

void ButtonRelease(uint32_t btn, uint32_t* pre, uint32_t* mode){
	if(btn == 1) {
		//		if(*pre == 0) Event(mode);
		*pre = btn;
	}
}

void Event(uint32_t* mode){
	(*mode) = ~(*mode);
}

void delay_while(int time){
	for (int i = 0; i < time; ++i);
}
